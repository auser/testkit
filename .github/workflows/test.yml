name: Database Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres
  MYSQL_URL: mysql://root:root@localhost:3306

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install nextest
      uses: taiki-e/install-action@nextest
        
    - name: Run fmt check
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-features -- -D warnings

    - name: Test PostgreSQL
      run: cargo nextest run --features postgres
      
    - name: Test SQLx PostgreSQL
      run: cargo nextest run --features "sqlx-postgres sqlx-backend"
      
    - name: Test MySQL
      run: cargo nextest run --features mysql
      
    - name: Test SQLx MySQL
      run: cargo nextest run --features "sqlx-mysql sqlx-backend"
      
    - name: Test all features
      run: cargo nextest run --all-features

    - name: Test feature-specific tests
      run: |
        cargo test --features "sqlite" --test sqlite_features
        cargo test --features "postgres" --test postgres_features
        cargo test --features "mysql" --test mysql_features
        cargo test --features "sqlx-sqlite sqlx-backend" --test sqlx_sqlite_features
        cargo test --features "sqlx-postgres sqlx-backend" --test sqlx_postgres_features
        cargo test --features "sqlx-mysql sqlx-backend" --test sqlx_mysql_features 